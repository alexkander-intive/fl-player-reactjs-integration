/*! ******************************************************************************* 
   Package Name: fl-chrome-sender
   Generated: 2022-08-24
   Version: 7.0.56

   Copyright (C) Firstlight Media. All rights reserved.  
   
   All information contained herein is, and remains the property of Firstlight Media. 
   The intellectual and technical concepts contained herein are proprietary to 
   Firstlight Media.  

   Dissemination of this information or reproduction of this material is strictly 
   forbidden unless prior written permission is obtained from Firstlight Media.  
   ******************************************************************************* */
import{createLogger as e,createEventEmitter as t,createError as a,isError as s}from"fl-foundation";import{PlayerContext as r}from"fl-player-interface";var n,i,o;function c(e,t=[]){let a=t.filter((t=>t.adStartTimeOffsetMs+t.durationMs<e)).map((e=>e.durationMs)).reduce(((e,t)=>e+t),0);return a+=t.filter((t=>{return a=e,(s=t).adStartTimeOffsetMs<=a&&a<s.adStartTimeOffsetMs+s.durationMs;var a,s})).map((t=>e-t.adStartTimeOffsetMs)).reduce(((e,t)=>e+t),0),a}function l(){const l=y()&&cast.framework.CastContext.getInstance(),u=t();let d,m,g,f,S,p;const k=e(),E={subscribe(e,t){u.subscribe(e,t)},unsubscribe(e,t){u.unsubscribe(e,t)},get castContext(){return l},get castSessionManager(){return d},get castPlayer(){return function(s){const n=e(),i=t();let o,l,u;const d=f()&&new cast.framework.RemotePlayer;let m=f()&&new cast.framework.RemotePlayerController(d);const g={get platformAsset(){},async loadMedia(e,t={}){if(f())try{const a={castAsset:{userAuthToken:await s.getUserAuthToken(),platformAsset:e,headers:t.headers,flAnalyticsData:t.flAnalyticsData||{},videoAnalyticsData:t.videoAnalyticsData||{}}},r=new chrome.cast.media.MediaInfo;r.metadata=t.metadata,r.tracks=t.mediaTracks,r.customData=a;const o=new chrome.cast.media.LoadRequest(r);(t.initialPlaybackTime||0===t.initialPlaybackTime)&&(o.currentTime=t.initialPlaybackTime),E(),s.castSessionManager.loadMedia(o).then((function(){i.publish("contentloaded"),S()}),(function(e){n.error("Failed to Loadmedia",e),y()}))}catch(e){n.error("Failed to Loadmedia",e)}else n.debug("cast framework is not available. Ensure the cast framework is loaded properly and running on chrome browser.")},subscribe(e,t){i.subscribe(e,t)},unsubscribe(e,t){i.unsubscribe(e,t)},get playerState(){switch(d.playerState){case"PLAYING":case"BUFFERING":return"started";case"PAUSED":return"paused";default:return"idle"}},get playbackRate(){return 0},set playbackRate(e){},get availableBitrates(){return[]},set minBitrate(e){},get minBitrate(){return 0},set maxBitrate(e){},get maxBitrate(){return 0},get internalPlayerName(){return"Chrome Sender"},get internalPlayerVersion(){return""},get rawPlayer(){return d},get rawLibrary(){},get isBuffering(){return!1},get isSeeking(){return!1},get currentTime(){if(void 0!==d.liveSeekableRange)return d.currentTime;const e=c(1e3*d.currentTime,u);return d.currentTime-e/1e3},get currentEpochTime(){return new Date(d.currentTime).getTime()},get duration(){return void 0===d.liveSeekableRange&&u?(1e3*d.duration-u.filter((e=>e.durationMs>0)).map((e=>e.durationMs)).reduce(((e,t)=>e+t),0))/1e3:d.duration},get playbackStatistics(){},get isLive(){return void 0!==d.liveSeekableRange},get isMute(){return d.isMuted},muteOrUnmute(){m.muteOrUnmute()},load(){},setRequestInterceptor(e){},setResponseInterceptor(e){},stop:()=>(m.stop(),Promise.resolve()),play(){d.isPaused&&m.playOrPause()},pause(){d.canPause&&!d.isPaused&&m.playOrPause()},abort:e=>{n.log(e)},send:(e,t,a)=>{n.log(`streamTimelineEvent: ${e} Action: ${t} metadata: ${a}`)},seek(e){if(d.canSeek&&void 0!==d.liveSeekableRange)d.currentTime=e,m.seek();else{const t=c(1e3*s.castSessionManager.getMediaSession().getEstimatedTime(),u);d.currentTime=e+t/1e3,m.seek()}},getThumbnail(e){},seekToLiveEdge(){this.seek(d.liveSeekableRange.end)},seekableRange(){return d.liveSeekableRange?{start:d.liveSeekableRange.start,end:d.liveSeekableRange.end}:{start:0,end:this.duration}},currentOffsetFromLiveEdge:()=>0,getAllTracks:()=>d.mediaInfo?d.mediaInfo.tracks.map((e=>({language:e.language,type:e.type.toLowerCase()}))):[],getActiveTracks(){if(!d.mediaInfo||!s.castSessionManager||!s.castSessionManager.getMediaSession())return[];const e=d.mediaInfo.tracks,t=s.castSessionManager.getMediaSession().activeTrackIds;return e.filter((e=>t.includes(e.trackId))).map((e=>({language:e.language,type:e.type.toLowerCase()})))},selectTrack(e){if(!f()||!d.mediaInfo)return;let t=[];const a=d.mediaInfo.tracks;e&&(t=a.filter((t=>e.type.toLowerCase()===t.type.toLowerCase()&&e.language===t.language)).map((e=>e.trackId)));const r=new chrome.cast.media.EditTracksInfoRequest(t);s.castSessionManager.getMediaSession().editTracksInfo(r,(()=>{n.log("Successfully changed track")}),(e=>{n.log("Failed to edit tracks",e)}))},get remainingTime(){return 0},skipAd(){m.skipAd()},discardAdBreak(){},getCuePoints:()=>[],resize(e,t,a){},accessFunctionHandler(e){},get playerContext(){return l},setPlaybackOptions(e){n.log("playback options",e)}};function f(){return"undefined"!=typeof cast}const S=()=>{f()?(m=new cast.framework.RemotePlayerController(d),o=s.castSessionManager.getMediaSession(),m.addEventListener(cast.framework.RemotePlayerEventType.IS_CONNECTED_CHANGED,(function(){d.isConnected?n.log("RemotePlayerController: Player connected"):d.isConnected||n.log("RemotePlayerController: Player disconnected")})),m.addEventListener(cast.framework.RemotePlayerEventType.CURRENT_TIME_CHANGED,(function(){i.publish("progressupdate")})),m.addEventListener(cast.framework.RemotePlayerEventType.PLAYER_STATE_CHANGED,(function(){"idle"===g.playerState&&"FINISHED"===o.idleReason&&i.publish("streamended"),i.publish("playbackstatechanged",g.playerState)})),m.addEventListener(cast.framework.RemotePlayerEventType.CAN_SEEK_CHANGED,(function(){i.publish("seekingstatechanged")}))):n.debug("cast framework is not available. Ensure the cast framework is loaded properly and running on chrome browser.")},p=(e,t)=>{if(e&&e.errorCode)return a(e.errorCode,e.errorMessage,t,e.contextDescription)},k=(e,t)=>{const a=JSON.parse(t);if("adbreaks"===a.messageName.toLowerCase()&&(i.publish(a.messageName.toLowerCase(),a.message),u=a.message),"adstart"===a.messageName.toLowerCase()&&(l=r.AD),"adend"===a.messageName.toLowerCase()&&(l=r.MAIN),"adprogressupdate"===a.messageName.toLowerCase())i.publish(a.messageName.toLowerCase(),a.message.adInfo,a.message.progress);else if("streamtimelineevent"===a.messageName.toLowerCase())i.publish(a.messageName.toLowerCase(),a.message.eventName,a.message.action,a.message.metadata);else if("error"===a.messageType.toLowerCase()){const e=a.message,t=p(e.internalError),s=p(e,t);i.publish(a.messageType.toLowerCase(),s)}else i.publish(a.messageName.toLowerCase(),a.message)},E=()=>{s.castSessionManager.addMessageListener(s.getChannelNamespace(),k)},y=()=>{s.castSessionManager.removeMessageListener(s.getChannelNamespace(),k)};return g}(this)},initialize(e,t,a,s){if(y())try{e.autoJoinPolicy=chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED,cast.framework.CastContext.getInstance().setOptions(e),m=a,g=t,S=s,function(){if(!y())return;l.addEventListener(cast.framework.CastContextEventType.SESSION_STATE_CHANGED,C)}()}catch(e){k.debug("cast session is failed to initialised",e)}else k.debug("cast framework is not available. Ensure the cast framework is loaded properly and running on chrome browser.")},async sendUserDeviceInformation(){if(null!=d){f={id:d.getCastDevice().label,name:"chromecast"};try{const e={userAuthToken:await this.getUserAuthToken(),platformClient:g,proxyPlatformClient:f};p={messageName:o.USER_CONTEXT,messageType:i.INFO,messageOrigin:n.SENDER,message:e},this.sendMessage(JSON.stringify(p))}catch(e){throw k.debug("Send UserDeviceInformation failed",e),e}}else k.debug("cast session is not initialised")},async sendMessage(e){if(d)try{await d.sendMessage(S,e)}catch(e){throw k.error("Send message to receiver failed with error",e),e}else k.warn("cast session is not initialised")},async getUserAuthToken(){if(!m)throw new Error("PlatformAuthorizer is not configured");const e=await m.userAuthorizationDelegate.fetchUserAuthorizationToken();if(s(e))throw k.error("UserAuthorization token fetch error ",e),e;return e.accessToken},getChannelNamespace(){if(!S)throw new Error("ChannelNamespace is not configured");return S},destroy(e){l&&l.endCurrentSession(e),function(){if(!y())return;l.removeEventListener(cast.framework.CastContextEventType.SESSION_STATE_CHANGED,C)}()}};function y(){return"undefined"!=typeof cast}const C=e=>{switch(e.sessionState){case cast.framework.SessionState.SESSION_STARTED:case cast.framework.SessionState.SESSION_RESUMED:k.debug("Cast Session started."),d=cast.framework.CastContext.getInstance().getCurrentSession(),E.sendUserDeviceInformation(),u.publish("castSessionConnected");break;case cast.framework.SessionState.SESSION_START_FAILED:k.error("Failed to start session"),u.publish("castSessionFailed");break;case cast.framework.SessionState.SESSION_ENDED:k.debug("Cast Session ended."),u.publish("castSessionEnded")}};return E}!function(e){e.SENDER="sender",e.RECEIVER="receiver"}(n||(n={})),function(e){e.ERROR="error",e.INFO="info",e.SUCCESS="success"}(i||(i={})),function(e){e.USER_CONTEXT="userContext",e.PLAYBACK_AUTHORISATION="playbackAuthorisation",e.DEVICE_REGISTRATION="deviceRegistration",e.CUSTOM="custom",e.SELECT_TRACK="selectTrack"}(o||(o={}));const u="7.0.56";export{l as createCastManagerImpl,u as version};

